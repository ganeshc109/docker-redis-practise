services:
  mysql:
    image: mysql:8.0
    container_name: a-user-mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: userdb
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - springnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - springnet

  a-config-server:
    build:
      context: ../A-config-server
    container_name: a-config-server
    ports:
      - "8889:8888"
    volumes:
      - ../A-config-repo:/config-repo
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: file:///config-repo
    networks:
      - springnet
    healthcheck:
      test: ["CMD-SHELL", "timeout 3 bash -c '</dev/tcp/localhost/8888' 2>/dev/null && echo 'OK' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 8
      start_period: 60s

  a-user-service:
    build: .
    container_name: a-user-service
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      a-config-server:
        condition: service_started
    ports:
      - "8086:8085"
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://a-config-server:8888
      SPRING_APPLICATION_NAME: A-user-service
    networks:
      - springnet

volumes:
  mysql_data:

networks:
  springnet:
    driver: bridge
